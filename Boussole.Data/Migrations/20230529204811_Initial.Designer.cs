// <auto-generated />
using System;
using Boussole.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Boussole.Data.Migrations
{
    [DbContext(typeof(BousSOleDbContext))]
    [Migration("20230529204811_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("bousSOle")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Boussole.LSO.Contracts.SSO.ElementNorm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("BaseNorm")
                        .HasColumnType("real");

                    b.Property<float?>("DistanceNorm")
                        .HasColumnType("real");

                    b.Property<string>("MeasurementUnit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormCollection")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ElementNorms", "bousSOle");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.SSO.FactWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Distance")
                        .HasColumnType("integer");

                    b.Property<int>("ElementNormId")
                        .HasColumnType("integer");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("SquadId")
                        .HasColumnType("integer");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ElementNormId");

                    b.HasIndex("SquadId");

                    b.ToTable("FactWorks", "bousSOle");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.SSO.PlanWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SquadMemberId")
                        .HasColumnType("integer");

                    b.Property<float>("WorkHours")
                        .HasColumnType("real");

                    b.Property<string>("WorkerActivityStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SquadMemberId");

                    b.ToTable("PlanWorks", "bousSOle");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.Structure.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdministratorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AdministratorTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StructWebsite")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Institutions", "bousSOle");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.Structure.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Persons", "bousSOle");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.Structure.Squad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InstitutionId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SquadType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VkUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Squads", "bousSOle");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.Structure.SquadMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MemberRank")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("SquadId")
                        .HasColumnType("integer");

                    b.Property<int>("YearEnlisted")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SquadId");

                    b.ToTable("SquadMembers", "bousSOle");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.SSO.FactWork", b =>
                {
                    b.HasOne("Boussole.LSO.Contracts.SSO.ElementNorm", "ElementNorm")
                        .WithMany()
                        .HasForeignKey("ElementNormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boussole.LSO.Contracts.Structure.Squad", "Squad")
                        .WithMany()
                        .HasForeignKey("SquadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementNorm");

                    b.Navigation("Squad");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.SSO.PlanWork", b =>
                {
                    b.HasOne("Boussole.LSO.Contracts.Structure.SquadMember", "SquadMember")
                        .WithMany()
                        .HasForeignKey("SquadMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SquadMember");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.Structure.Squad", b =>
                {
                    b.HasOne("Boussole.LSO.Contracts.Structure.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("Boussole.LSO.Contracts.Structure.SquadMember", b =>
                {
                    b.HasOne("Boussole.LSO.Contracts.Structure.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boussole.LSO.Contracts.Structure.Squad", "Squad")
                        .WithMany()
                        .HasForeignKey("SquadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Squad");
                });
#pragma warning restore 612, 618
        }
    }
}
